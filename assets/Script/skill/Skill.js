var SkillBase=cc.Class({
    name:"SkillBase",
    properties:{
        unit:null,
        unitBase:null,
        unitSkill:null,
    },
    ctor:function(){
    },
    bind:function(unit){
        this.unit=unit;
        this.unitSkill=this.unit.getComponent("UnitSkill");
        this.unitBase=this.unit.getComponent("UnitBase");
    },
    cast:function(){
        console.log("cast skill");
    },
    update:function(dt){
    }
});

var hitState={
    BEFORE:1,
    AFTER:2,
    IDLE:3,
}
var HitSkill=cc.Class({
    extends:SkillBase,
    properties:{
        damageCoe:1,
        preTime:0.5,
        
        startFlag:false,
        targetId:null,
    },
    cast:function(){
        this.unitBase.bulletManager.skillCreateBullet(this.unit,this.targetId)
    },
    bind:function(unit){
        this._super.apply(this,arguments);
        this.unitSkill.addListener("hit",this,this.onUnitHit);
        this.unitSkill.addListener("update",this,this.onUnitUpdate);
    },
    onUnitHit:function(targetId){
        this.unitSkill.attackLock();
        this.preTime=0.5;
        this.startFlag=true;
        this.targetId=targetId;
    },
    onUnitUpdate:function(dt){
        if(this.startFlag){
            if(this.preTime<=0){
                this.cast();
                this.startFlag=false;
                this.preTime=0.5;
                this.targetId=null;
                this.unitSkill.attackUnlock();
            }else{
                this.preTime-=dt;
            }
        }
    },
});
var MoveSkill=cc.Class({
    extends:SkillBase,
    properties:{
        coolTime:0,
        state:hitState.BEFORE,
    },
    bind:function(){
        this._super.apply(this,arguments);
        this.unitSkill.addListener("startMove",this,this.onUnitStartMove);
        this.unitSkill.addListener("updateMove",this,this.onUnitUpdateMove);
    },
    onUnitStartMove:function(){
        this.coolTime=1;
    },
    onUnitMoveUpdate:function(dt){
        this.coolTime-=dt;
        if(this.coolTime<=0){
            this.cast();
            this.coolTime=1;
        }
    },
});
var StandSkill=cc.Class({
    extends:SkillBase,
    properties:{
        coolTime:1,
    },
    bind:function(){
        this._super.apply(this,arguments);
        this.unitSkill.addListener("startStand",this,this.onUnitStartStand);
        this.unitSkill.addListener("updateStand",this,this.onUnitUpdateStand);
    },
    cast:function(){
        console.log("cast stand skill");
    },
    onUnitStartStand:function(){
        this.coolTime=1;
    },
    onUnitUpdateStand:function(dt){
        this.coolTime-=dt;
        if(this.coolTime<=0){
            this.cast();
            this.coolTime=1;
        }
    },
});
const SkillCategory=require("SkillCategory");
module.exports={
    SkillBase:SkillBase,
    HitSkill:HitSkill,
    StandSkill:StandSkill,
    MoveSkill:MoveSkill
}